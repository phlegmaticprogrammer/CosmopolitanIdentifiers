    import XCTest
    import CosmopolitanIdentifiers

    final class CosmopolitanIdentifiersTests: XCTestCase {
        
        func noID(_ name : String) {
            XCTAssertNil(CosmoID(name))
        }
        
        func testID(_ name : String, normalized : String) {
            let id = CosmoID(external: name)
            XCTAssertEqual(id?.normalizedName, normalized)
        }
                
        func testCosmoID() {
            noID("10")
            testID("a", normalized: "a")
            testID(" a", normalized: "a")
            testID("A", normalized: "A")
            testID(" A ", normalized: "A")
            noID(" √Ñ ")
            noID("√Ñ")
            testID("√Ñrger", normalized: "arger")
            testID("lothar-matthaus-10", normalized: "lothar-matthaus-10")
            testID("lothar  matthaus 10", normalized: "lothar-matthaus-10")
            testID("Lothar-Matthaus-10", normalized: "lothar-matthaus-10")
            testID("lothar-matth√§us", normalized: "lothar-matthaus")
            noID("10")
            noID("10-lothar-matthaus")
            noID("lothar-matthaus-")
            noID("lothar--matthaus")
            noID("lothar - matthaus")
            noID("-lothar")
            noID("lothar-")
            noID("x-")
            testID("ŒúœÄŒ≠œáœÅŒøœÇ", normalized: "mpechros")
            testID("Œì", normalized: "Œì")
            testID("Œ≥", normalized: "Œ≥")
            testID("Œì1", normalized: "Œì-1")
            testID("Œ≥1", normalized: "Œ≥-1")
            testID("Œì-1", normalized: "Œì-1")
            testID("Œ≥-1", normalized: "Œ≥-1")
            testID("ŒìŒ≥", normalized: "gg")
            testID("Œì1Œ≥", normalized: "Œì-1-Œ≥")
            testID("Œì1-Œ≥", normalized: "Œì-1-Œ≥")
            testID("Œì1-1Œ≥", normalized: "Œì-1-1-Œ≥")
            testID("–ê–Ω–¥—Ä–µÃÅ–π –ù–∏–∫–æ–ª–∞ÃÅ–µ–≤–∏—á –ö–æ–ª–º–æ–≥–æÃÅ—Ä–æ–≤", normalized: "andrej-nikolaevich-kolmogorov")
            testID("Œ¶ŒøœÅœÑœÅŒ±ŒΩ", normalized: "fortran")
            testID("√Öb", normalized: "ab")
            noID("√Ö")
            testID("ùî∏", normalized: "ùî∏")
            testID("‚ÑÇ", normalized: "‚ÑÇ")
            testID("‚ÑÇ1", normalized: "‚ÑÇ-1")
            noID("‚ÑÇ‚ÑÇ")
            testID("‚ÑÇ-‚ÑÇ", normalized: "‚ÑÇ-‚ÑÇ")
            testID("‚ÑÇ_‚ÑÇ", normalized: "‚ÑÇ-‚ÑÇ")
            testID("‚ÑÇ1", normalized: "‚ÑÇ-1")
            noID("‚ÑÉ")
            noID("‚Ñé")
            noID("‚Ñè")
        }
        
        func testExample() {
            let cid = CosmoID(external: "Fr√©chet –ö–æ–ª–º–æ–≥–æÃÅ—Ä–æ–≤ Œ∏ŒµœéœÅŒ∑ŒºŒ±")!
            print("CosmoID = \(cid)")
            print("Normal form = \(cid.normalizedName)")

            let nf = CosmoID("frechet-kolmogorov-theorima")!
            XCTAssertEqual(cid, nf)
        }

    }
